name: Build
on:
  push:
    branches:
      - main # the name of your main branch
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to ECR
        run: |
          # Replace with your Docker build and push commands
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 654654157582.dkr.ecr.ap-south-1.amazonaws.com
          docker build -t docker-pipeline-2 .
          docker tag docker-pipeline-2:latest 654654157582.dkr.ecr.ap-south-1.amazonaws.com/docker-pipeline-2:latest
          docker push 654654157582.dkr.ecr.ap-south-1.amazonaws.com/docker-pipeline-2:latest
        env:
          ECR_REGISTRY: Private registry
          ECR_REPOSITORY: docker-pipeline-2
          AWS_REGION: ap-south-1
      - name: SSH into EC2 instance and pull Docker image
        uses: appleboy/ssh-action@master
        with:
          host: 35.154.24.97
          username: ubuntu  # Replace with your EC2 instance username
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # Add your SSH private key as a secret
          script: |
            docker pull 654654157582.dkr.ecr.ap-south-1.amazonaws.com/docker-pipeline-2:latest
            docker run -d -p 80:8080 654654157582.dkr.ecr.ap-south-1.amazonaws.com/docker-pipeline-2:latest    
          
        
